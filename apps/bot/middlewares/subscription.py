from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import Message
from aiogram import Bot
from django.conf import settings

from apps.bot.keyboards.subscribe import get_subscribe_keyboard


class SubscriptionMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
        event: Message,
        data: Dict[str, Any],
    ) -> Any:
        bot: Bot = data["bot"]
        user_id: int = event.from_user.id

        for channel in settings.REQUIRED_CHANNELS:
            try:
                member = await bot.get_chat_member(channel, user_id)
                if member.status in ["left", "kicked"]:
                    await event.answer(
                        f"üö´ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª(—ã):)",
                        reply_markup=get_subscribe_keyboard(),
                    )
                    return  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–∞

            except Exception as e:
                await event.answer(
                    "‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
                    "üîπ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:\n"
                    "1Ô∏è‚É£ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
                    "2Ô∏è‚É£ –£ –∫–∞–Ω–∞–ª–∞ –µ—Å—Ç—å @username –∏–ª–∏ –±–æ—Ç –≤ –Ω—ë–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n"
                    "3Ô∏è‚É£ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.\n\n"
                    "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É.",
                    reply_markup=get_subscribe_keyboard(),
                )
                return

        return await handler(event, data)


__all__ = ("SubscriptionMiddleware",)

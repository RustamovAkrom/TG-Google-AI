# Generated by Django 5.0.8 on 2025-08-17 16:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="New",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Is Published"),
                ),
            ],
            options={
                "verbose_name": "New",
                "verbose_name_plural": "News",
                "db_table": "news",
            },
        ),
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.BigIntegerField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="User ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Username"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "language_code",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Access Token (Google AI)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "Telegram User",
                "verbose_name_plural": "Telegram Users",
                "db_table": "telegram_users",
            },
        ),
        migrations.CreateModel(
            name="GenAISetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "model_name",
                    models.CharField(
                        choices=[("gemini-2.0-flash", "Gemini 2.0-Flash")],
                        default="gemini-2.0-flash",
                        max_length=100,
                        verbose_name="(Google AI) Model Name",
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(default=0.5, verbose_name="Temperature"),
                ),
                ("top_k", models.IntegerField(default=2, verbose_name="Top K")),
                ("top_p", models.FloatField(default=0.5, verbose_name="Top P")),
                (
                    "max_output_tokens",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Max Output Tokens"
                    ),
                ),
                (
                    "seed",
                    models.IntegerField(blank=True, null=True, verbose_name="Seed"),
                ),
                ("tools", models.JSONField(default=list, verbose_name="Tools")),
                (
                    "safety_settings",
                    models.JSONField(default=list, verbose_name="Safety Settings"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genai_settings",
                        to="bot.telegramuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "GenAI Setting",
                "verbose_name_plural": "GenAI Settings",
                "db_table": "genai_ai_settings",
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to="bot.telegramuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback",
                "verbose_name_plural": "Feedbacks",
                "db_table": "feedbacks",
            },
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("user", "User"), ("model", "Model")],
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "TEXT"),
                            ("image", "Image"),
                            ("document", "Document"),
                            ("audio", "Audio"),
                            ("video", "Video"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="Message Type",
                    ),
                ),
                (
                    "content",
                    models.TextField(blank=True, null=True, verbose_name="Content"),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="history_files/",
                        verbose_name="File",
                    ),
                ),
                (
                    "telegram_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="histories",
                        to="bot.telegramuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "History",
                "verbose_name_plural": "Histories",
                "db_table": "histories",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["telegram_user", "created_at"],
                        name="histories_telegra_1511f5_idx",
                    )
                ],
            },
        ),
    ]

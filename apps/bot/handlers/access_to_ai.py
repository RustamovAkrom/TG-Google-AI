from aiogram import Router, filters, types
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from apps.bot.services import set_telegram_user_access_token


router = Router()


class AccessTokenProcess(StatesGroup):
    waiting_for_access_key = State()


@router.message(filters.Command("set_access_key"))
async def set_access_key_state(message: types.Message, state: FSMContext):
    await state.set_state(AccessTokenProcess.waiting_for_access_key)
    await message.answer("üîë –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Google AI:")


@router.message(AccessTokenProcess.waiting_for_access_key)
async def set_access_key_handle(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    access_key = message.text.strip()

    is_success = await set_telegram_user_access_token(user_id, access_key)
    if is_success:
        await state.clear()
        await message.answer(
            "‚úÖ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω—ë–Ω! –¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ."
        )
    else:
        await state.clear()
        await message.answer("‚ùå–≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è")
